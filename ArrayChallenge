#strArr represents a binary tree and determine if the tree is symmetric (a mirror image of itself)
def ArrayChallenge(strArr)

power=1
base=2
is_symmetric=true
exit_all=false

  while is_symmetric==true and exit_all== false and base**power<=strArr.length() do
    #if there's only one element in array it's symmetric 
    if strArr.length()==1
      exit_all=true
      
    else  
      #check level of tree
      for i in 0...base**(power-1)
              #check elements in given level
              if strArr[base**(power) -1 +i]== strArr[base**(power+1)- 2-i]
                puts strArr[base**power -1 +i]
                
              else 
                is_symmetric=false
                exit_all=true
                break
              end  
      
       end #end of for
      puts "Power: #{power}"
      power+=1
  
    end #of while
  end #of def
  return is_symmetric
end
# keep this function call here 
puts "Type an array in format example: 1 2 2"
odp=STDIN.gets
odp=odp.split()
puts ArrayChallenge(odp)
#puts ArrayChallenge(["1"])
#puts ArrayChallenge([1,2,3])
#puts ArrayChallenge(["1","2","1","3","#","#","3"])
